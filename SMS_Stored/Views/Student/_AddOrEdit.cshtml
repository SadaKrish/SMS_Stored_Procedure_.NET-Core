@model SMS.Model.Student.StudentBO

<style>
    .fr-div {
        margin-bottom: 10px;
    }

    .control-label, .form-control, .form-select {
        font-size: 12px;
    }

    span {
        color: red;
    }
</style>
<form id="studentForm" asp-action="UpsertStudent" asp-controller="Student" method="post" data-ajax="true" data-ajax-mode="replace" data-ajax-update="#">
    <div class="container d-flex justify-content-center align-items-center w-100 m-2" style="min-height: calc(100vh - 100px); margin-bottom: 50px;">
        <div class="card p-4 fr-div" style="max-width: 500px; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1); border-radius: 10px;">
            @*<div class="col-md-12 ">*@
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.StudentID)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row form-group d-flex">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.StudentRegNo, new { @class = "control-label required" })
                </div>
                <div class="col-md p-2">
                    @Html.EditorFor(model => model.StudentRegNo, new { htmlAttributes = new { @class = "form-control", id = "studentRegNo" } })
                    @Html.ValidationMessageFor(model => model.StudentRegNo, "", new { @class = "field-validation-error" })
                    <span id="regNoExistsMsg" class="text-danger"></span>

                </div>
            </div>
            <div class="row form-group d-flex">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.FirstName, new { @class = "control-label required" })
                </div>
                <div class="col-md p-2">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "field-validation-error" })

                </div>
            </div>
            <div class="row form-group d-flex">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.MiddleName, new { @class = "control-label " })
                </div>
                <div class="col-md p-2">
                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "field-validation-error" })

                </div>
            </div>
            <div class="row form-group d-flex">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.LastName, new { @class = "control-label required" })
                </div>
                <div class="col-md p-2">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "field-validation-error" })

                </div>
            </div>
            <div class="row form-group d-flex">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.DisplayName, new { @class = "control-label required" })
                </div>
                <div class="col-md p-2">
                    @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control", id = "studentDisplayName" } })
                    @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "field-validation-error" })
                    <span id="displayNameExistsMsg" class="text-danger"></span>

                </div>
            </div>
            <div class="row form-group d-flex">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Email, new { @class = "control-label required" })
                </div>
                <div class="col-md p-2">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "email", id = "studentEmail" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "field-validation-error" })
                    <span id="emailExistsMsg" class="text-danger"></span>

                </div>
            </div>

            <div class="row form-group d-flex">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Gender, new { @class = "control-label required" })
                </div>
                <div class="col-md p-2">
                    <select class="form-select" id="genderSelect" name="Gender">
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                        <option value="Other">Other</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "field-validation-error" })
                </div>
            </div>

            <div class="row form-group d-flex">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.DOB, new { @class = "control-label required" })
                </div>
                <div class="col-md p-2">
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control ", id = "dobField", type = "date" } })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "field-validation-error" })

                </div>
            </div>


            <div class="row form-group d-flex">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Address, new { @class = "control-label required" })
                </div>
                <div class="col-md p-2">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "field-validation-error" })

                </div>
            </div>
            <div class="row form-group d-flex">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.ContactNo, new { @class = "control-label required" })
                </div>
                <div class="col-md p-2">
                    @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="row form-group d-flex">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.IsEnable, new { @class = "control-label" })
                </div>
                <div class="col-md p-2">
                    @Html.CheckBoxFor(model => model.IsEnable, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>


            <div class="form-group align-content-center">
                <input type="submit" value="@(Model.StudentID== null ? "Add" : "Update")" class="btn btn-primary" style="font-size:14px;" />
                <button id="back-to-list" class="btn btn btn-secondary m-4" onclick="LoadList()">Back</button>
            </div>


        </div>
    </div>
</form>